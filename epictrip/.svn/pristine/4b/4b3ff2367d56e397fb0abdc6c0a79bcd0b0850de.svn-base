package com.web.epictrip.controller;


import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.session.SqlSession;
import org.apache.ibatis.session.SqlSessionFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.web.epictrip.service.Schedule_service;
import com.web.epictrip.vo.Place;
import com.web.epictrip.vo.Schedule_insert01;
import com.web.epictrip.vo.Schedule_insert02;

@Controller
public class Schedule_controller {

	@Autowired
	private Schedule_service service; 
	
    @Autowired
    private SqlSessionFactory sqlSessionFactory;

	// 상세화면
	@GetMapping("schedule_detail")
	public String showDetailPage(@RequestParam("schedule_key") String scheduleKey, Model model) {
		// 조회수 up
		service.scheduleUpHits(scheduleKey);
	    // 모델에 데이터 추가
	    model.addAttribute("scheduleDetails", service.schedule_Dt(scheduleKey));
	    model.addAttribute("scheduleIns", service.schedule_Dt02(scheduleKey));
	    
	    return "CommunityDetail";
	}

	// 전체화면
	@GetMapping("schedule_main")
	public String showMainPage() {
		
		return "Community_Schedule_main";
	}
	
	
	
	
	// 작성 페이지
	@GetMapping("Community_WriteSch")
	public String showSchPage() {
		
		return "Community_WriteSch";
	}
	
	
	// 작성페이지 관광지 서치
	@GetMapping("placeInfo")
	@ResponseBody
	public List<Place> placeInfo(@RequestParam("loc") String loc, @RequestParam("name") String name){
		return service.placeInfo(loc,name);
	}
	
	// 스케쥴 인서트 메서드
	// Community_Insert?userid=heoyoun38&loc=%EC%9D%BC%EB%B3%B8&startdate=2023-08-17&enddate=2023-08-18&place_key=pl6&daynum=1
	@PostMapping("Community_Insert11")
	@ResponseBody
	public String insertSch(					    	
			@RequestParam("startdateS") String startdate,
			@RequestParam("enddateS") String enddate,
	        Schedule_insert01 ins01,@RequestBody List<Schedule_insert02>  ins02List) {
	    String msg = "작성 실패";
	    // sqlSession = null;

	    System.out.println(startdate);
	    System.out.println(enddate);
	    System.out.println(ins02List);
	    System.out.println(ins01);
	    
		

		
		 

	    return msg;
	}

	@PostMapping("Community_Insert")
	@ResponseBody
	public String insertSch(@RequestBody Map<String, Object> requestData) {
	    String msg = "작성 실패";
	    SqlSession sqlSession = null;
	    System.out.println(requestData);

	    try {
	        String startdateStr = (String) requestData.get("startdateS"); // 문자열 형식으로 날짜 수신
	        String enddateStr = (String) requestData.get("enddateS");     // 문자열 형식으로 날짜 수신

	        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
	        Date startdate = dateFormat.parse(startdateStr); // 문자열을 Date 형식으로 변환
	        Date enddate = dateFormat.parse(enddateStr);     // 문자열을 Date 형식으로 변환

	        String userid = (String) requestData.get("userid");
	        String loc = (String) requestData.get("loc");
	        List<Map<String, Object>> ins02List = (List<Map<String, Object>>) requestData.get("Schedule_insert02");

	        sqlSession = sqlSessionFactory.openSession();

	        Schedule_insert01 ins01 = new Schedule_insert01(); // ins01 객체 생성

	        ins01.setStartdate(startdate);
	        ins01.setEnddate(enddate);
	        // 설정이 필요한 나머지 ins01 속성들을 설정해야 함

	        sqlSession.insert("scheduleIns01", ins01); // ins01 삽입

	        String generatedKey = ins01.getSchedule_key();

	        for (Map<String, Object> ins02Data : ins02List) {
	            Schedule_insert02 ins02 = new Schedule_insert02(); // ins02 객체 생성

	            ins02.setSchedule_key(generatedKey);
	            // ins02에 설정이 필요한 나머지 속성들을 설정해야 함

	            sqlSession.insert("scheduleIns02", ins02); // ins02 삽입
	        }

	        sqlSession.commit();
	        msg = "작성이 완료되었습니다.";
	    } catch (Exception e) {
	        if (sqlSession != null) {
	            sqlSession.rollback();
	        }
	        e.printStackTrace();
	    } finally {
	        if (sqlSession != null) {
	            sqlSession.close();
	        }
	    }

	    return msg;
	}




}
