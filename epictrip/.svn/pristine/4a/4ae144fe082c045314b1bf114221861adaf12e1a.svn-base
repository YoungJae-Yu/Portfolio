package com.web.epictrip.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.web.epictrip.service.Company_service;
import com.web.epictrip.vo.Company;
import com.web.epictrip.vo.User;

import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpSession;

@Controller
public class Company_controller {

    @Autowired
    private Company_service companyService;
    
    // http://localhost:4040/Community_Group
    // 동행 페이지 메인
    @GetMapping("/Community_Group")
    public String Community_Group(HttpServletRequest request, Model model) {
    	User loginUser = getLoginUser(request);
    	model.addAttribute("loginUser", loginUser);
        return "Community_Group";
    }
    // http://localhost:4040/Community_GroDetail
    // 동행 상세 페이지
    @GetMapping("/Community_GroDetail")
    public String Community_GroDetail(HttpServletRequest request, Model model) {
    	User loginUser = getLoginUser(request);
    	model.addAttribute("loginUser", loginUser);
    	return "Community_GroDetail";
    }
    // http://localhost:4040/companies
    // 동행(메인) 리스트 출력 및 검색,필터링
    @GetMapping("/companies")
    @ResponseBody
    public List<Company> getCompanies(@RequestParam(defaultValue="") String cptitle,
    		@RequestParam(required=false, defaultValue="default") String orderType) {
        return companyService.getCompanyList(cptitle, orderType);
    }
    // 동행 작성
    @GetMapping("/Community_WriteGrp")
    public String Community_WriteGrp(HttpServletRequest request, Model model) {
    	User loginUser = getLoginUser(request);
    	model.addAttribute("loginUser", loginUser);
    	return "Community_WriteGrp";
    }
    // 세션 처리
    public User getLoginUser(HttpServletRequest request ) {
        HttpSession session = request.getSession();
        User userInfo = (User) session.getAttribute("userInfo");
        return userInfo;
    }
    // 동행 작성
    @PostMapping("/insertCompany")
    public String insertCompany(Company company, RedirectAttributes redirectAttributes) {
        String result = companyService.insertCompany(company);
        if ("작성성공".equals(result)) {
            redirectAttributes.addFlashAttribute("message", "글이 성공적으로 작성되었습니다.");
            return "redirect:/Community_Group"; // 작성 성공 후 리다이렉트할 경로
        } else {
            redirectAttributes.addFlashAttribute("errorMessage", "글 작성에 실패했습니다. 다시 시도해주세요.");
            return "redirect:/Community_WriteGrp"; // 작성 실패 후 리다이렉트할 경로 (작성 페이지로 다시 돌아감)
        }
    }
}
/*
아이디``
나이(20대)``
성별``
여행기간(시작날짜~끝날짜)`
지역`
이미지`
모집인원`
조회수`
메시지 횟수`
제목`
내용`
 */
