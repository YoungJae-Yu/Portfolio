CREATE TABLE UserInfo (
   userid VARCHAR(255) NOT NULL,
   pass VARCHAR(255) NULL,
   name VARCHAR(255) NULL,
   phnumber VARCHAR(255) NULL,
   gender VARCHAR(255) NULL,
   birth Date NULL,
   email VARCHAR(255) NULL,
   point number NULL,
   image VARCHAR(255) NULL,
   auth VARCHAR(255) NULL,
   joindate Date NULL
);
DROP TABLE UserInfo;
ALTER TABLE UserInfo ADD CONSTRAINT PK_UNTITLED PRIMARY KEY (
   userid
);
SELECT * FROM UserInfo;
INSERT INTO userInfo values('asdads', '0000', '윤석민', '123123', '남', '20230112', 'dasd@naver.com', 100, 'img01', 'user', sysdate)

-- 로그인
SELECT COUNT(*) FROM USERINFO WHERE userid = 'heoyoun38' AND pass = '0000';

-- 회원가입
INSERT INTO userInfo values('heoyoun38','0000','윤석민','01033293090','남','19980309','min030900@naver.com',9999,'img01','admin',sysdate);
INSERT INTO userInfo values('gPdnjs123','0000','신혜원','0103333333','여',TO_DATE ('19980309','YYYY-MM-DD'),'gPdnjs123@naver.com',9999,'img01','admin',sysdate);

-- 아이디 확인
SELECT COUNT(*) FROM USERINFO WHERE userid = 'heoyoun38';
/*
회원 DB
- 아이디
- 비밀번호
- 이름
- 전화번호
- 성별
- 생년 월일
- 이메일
- 휴대폰 번호
- 포인트
-  이미지
- 권한
- 생성 날짜

*/
DROP TABLE IF EXISTS userinfo;

CREATE TABLE userinfo (
	userid	VARCHAR(255)	NOT NULL,
	pass	VARCHAR(255)	NULL,
	name	VARCHAR(255)	NULL,
	mobilenumber	VARCHAR(255)	NULL,
	gender	VARCHAR(255)	NULL,
	birth	DATE NULL,
	email	VARCHAR(255)	NULL,
	point	number	NULL,
	image	VARCHAR(255)	NULL,
	auth	VARCHAR(255)	NULL,
	joindate	Date	NULL
);

DROP TABLE IF EXISTS Recommendation;

CREATE TABLE Recommendation (
	reckey	VARCHAR(255)	NOT NULL,
	userid	VARCHAR(255)	NOT NULL,
	recuser	VARCHAR(255)	NULL
);

DROP TABLE IF EXISTS Wishlist;

CREATE TABLE Wishlist (
	wlkey	VARCHAR(255)	NOT NULL,
	userid	VARCHAR(255)	NOT NULL,
	prodkey	VARCHAR(255)	NOT NULL,
	wldate	date	NULL
);

DROP TABLE IF EXISTS Schedule;

CREATE TABLE Schedule (
	skey	VARCHAR(255)	NOT NULL,
	userid	VARCHAR(255)	NOT NULL,
	creatdate	date	NULL
);

DROP TABLE IF EXISTS company;

CREATE TABLE company (
	cpkey	VARCHAR(255)	NOT NULL,
	userid	VARCHAR(255)	NOT NULL,
	image	VARCHAR(255)	NULL,
	cptitle	VARCHAR(255)	NULL,
	cpcontent	VARCHAR(3000)	NULL,
	cploc	VARCHAR(255)	NULL,
	cpnum	number	NULL,
	hits	number	NULL,
	startdate	date	NULL,
	enddate	date	NULL,
	creatdate	date	NULL
);

DROP TABLE IF EXISTS product;

CREATE TABLE product (
	prodkey	VARCHAR(255)	NOT NULL,
	prodloc	VARCHAR(255)	NULL,
	dcday	double	NULL,
	dcprice	double	NULL,
	price	number	NULL,
	prodtitle	VARCHAR(255)	NULL,
	prodcontent	VARCHAR(3000)	NULL,
	image	VARCHAR(255)	NULL,
	hits	number	NULL,
	startdate	date	NULL,
	enddate	date	NULL,
	creatdate	date	NULL
);

DROP TABLE IF EXISTS Payment;

CREATE TABLE Payment (
	paykey	VARCHAR(255)	NOT NULL,
	userid	VARCHAR(255)	NOT NULL,
	prodkey	VARCHAR(255)	NOT NULL,
	savedmoney	number	NULL,
	paydate	date	NULL,
	paystatus	VARCHAR(255)	NULL
);

DROP TABLE IF EXISTS Prodcomment;

CREATE TABLE Prodcomment (
	commentkey	VARCHAR(255)	NOT NULL,
	prodkey	VARCHAR(255)	NOT NULL,
	userid	VARCHAR(255)	NOT NULL,
	Uppernumber	VARCHAR(255)	NULL,
	comment	VARCHAR(255)	NULL,
	uploaddate	date	NULL,
	updatedate	date	NULL
);

DROP TABLE IF EXISTS Detailschedule;

CREATE TABLE Detailschedule (
	dskey	VARCHAR(255)	NOT NULL,
	skey2	VARCHAR(255)	NOT NULL,
	userid	VARCHAR(255)	NOT NULL
);

DROP TABLE IF EXISTS Message;

CREATE TABLE Message (
	Messagekey	VARCHAR(255)	NOT NULL,
	cpkey	VARCHAR(255)	NOT NULL,
	userid	VARCHAR(255)	NOT NULL,
	reuserid	VARCHAR(255)	NULL,
	msgcontent	VARCHAR(3000)	NULL,
	sendtime	timestamp	NULL
);

DROP TABLE IF EXISTS mySchedule;

CREATE TABLE mySchedule (
	mskey	VARCHAR(255)	NOT NULL,
	skey2	VARCHAR(255)	NOT NULL,
	userid	VARCHAR(255)	NOT NULL,
	msdate	date	NULL
);

ALTER TABLE userinfo ADD CONSTRAINT PK_USERINFO PRIMARY KEY (
	userid
);

ALTER TABLE Recommendation ADD CONSTRAINT PK_RECOMMENDATION PRIMARY KEY (
	reckey,
	userid
);

ALTER TABLE Wishlist ADD CONSTRAINT PK_WISHLIST PRIMARY KEY (
	wlkey,
	userid,
	prodkey
);

ALTER TABLE Schedule ADD CONSTRAINT PK_SCHEDULE PRIMARY KEY (
	skey,
	userid
);

ALTER TABLE company ADD CONSTRAINT PK_COMPANY PRIMARY KEY (
	cpkey,
	userid
);

ALTER TABLE product ADD CONSTRAINT PK_PRODUCT PRIMARY KEY (
	prodkey
);

ALTER TABLE Payment ADD CONSTRAINT PK_PAYMENT PRIMARY KEY (
	paykey,
	userid,
	prodkey
);

ALTER TABLE Prodcomment ADD CONSTRAINT PK_PRODCOMMENT PRIMARY KEY (
	commentkey,
	prodkey,
	userid
);

ALTER TABLE Detailschedule ADD CONSTRAINT PK_DETAILSCHEDULE PRIMARY KEY (
	dskey,
	skey2,
	userid
);

ALTER TABLE Message ADD CONSTRAINT PK_MESSAGE PRIMARY KEY (
	Messagekey,
	cpkey,
	userid
);

ALTER TABLE mySchedule ADD CONSTRAINT PK_MYSCHEDULE PRIMARY KEY (
	mskey,
	skey2,
	userid
);

ALTER TABLE Recommendation ADD CONSTRAINT FK_userinfo_TO_Recommendation_1 FOREIGN KEY (
	userid
)
REFERENCES userinfo (
	userid
);

ALTER TABLE Wishlist ADD CONSTRAINT FK_userinfo_TO_Wishlist_1 FOREIGN KEY (
	userid
)
REFERENCES userinfo (
	userid
);

ALTER TABLE Wishlist ADD CONSTRAINT FK_product_TO_Wishlist_1 FOREIGN KEY (
	prodkey
)
REFERENCES product (
	prodkey
);

ALTER TABLE Schedule ADD CONSTRAINT FK_userinfo_TO_Schedule_1 FOREIGN KEY (
	userid
)
REFERENCES userinfo (
	userid
);

ALTER TABLE company ADD CONSTRAINT FK_userinfo_TO_company_1 FOREIGN KEY (
	userid
)
REFERENCES userinfo (
	userid
);

ALTER TABLE Payment ADD CONSTRAINT FK_userinfo_TO_Payment_1 FOREIGN KEY (
	userid
)
REFERENCES userinfo (
	userid
);

ALTER TABLE Payment ADD CONSTRAINT FK_product_TO_Payment_1 FOREIGN KEY (
	prodkey
)
REFERENCES product (
	prodkey
);

ALTER TABLE Prodcomment ADD CONSTRAINT FK_product_TO_Prodcomment_1 FOREIGN KEY (
	prodkey
)
REFERENCES product (
	prodkey
);

ALTER TABLE Prodcomment ADD CONSTRAINT FK_userinfo_TO_Prodcomment_1 FOREIGN KEY (
	userid
)
REFERENCES userinfo (
	userid
);

ALTER TABLE Detailschedule ADD CONSTRAINT FK_Schedule_TO_Detailschedule_1 FOREIGN KEY (
	skey2
)
REFERENCES Schedule (
	skey
);

ALTER TABLE Detailschedule ADD CONSTRAINT FK_Schedule_TO_Detailschedule_2 FOREIGN KEY (
	userid
)
REFERENCES Schedule (
	userid
);

ALTER TABLE Message ADD CONSTRAINT FK_company_TO_Message_1 FOREIGN KEY (
	cpkey
)
REFERENCES company (
	cpkey
);

ALTER TABLE Message ADD CONSTRAINT FK_company_TO_Message_2 FOREIGN KEY (
	userid
)
REFERENCES company (
	userid
);

ALTER TABLE mySchedule ADD CONSTRAINT FK_Schedule_TO_mySchedule_1 FOREIGN KEY (
	skey2
)
REFERENCES Schedule (
	skey
);

ALTER TABLE mySchedule ADD CONSTRAINT FK_Schedule_TO_mySchedule_2 FOREIGN KEY (
	userid
)
REFERENCES Schedule (
	userid
);



