package com.web.epictrip.controller;


import java.util.Date;
import java.util.List;

import org.apache.ibatis.session.SqlSession;
import org.apache.ibatis.session.SqlSessionFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.format.annotation.DateTimeFormat;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.web.epictrip.service.Schedule_service;
import com.web.epictrip.vo.Place;
import com.web.epictrip.vo.Schedule_insert01;
import com.web.epictrip.vo.Schedule_insert02;

@Controller
public class Schedule_controller {

	@Autowired
	private Schedule_service service; 
	
    @Autowired
    private SqlSessionFactory sqlSessionFactory;

	// 상세화면
	@GetMapping("schedule_detail")
	public String showDetailPage(@RequestParam("schedule_key") String scheduleKey, Model model) {
		// 조회수 up
		service.scheduleUpHits(scheduleKey);
	    // 모델에 데이터 추가
	    model.addAttribute("scheduleDetails", service.schedule_Dt(scheduleKey));
	    model.addAttribute("scheduleIns", service.schedule_Dt02(scheduleKey));
	    
	    return "CommunityDetail";
	}

	// 전체화면
	@GetMapping("schedule_main")
	public String showMainPage() {
		
		return "Community_Schedule_main";
	}
	
	
	
	
	// 작성 페이지
	@GetMapping("Community_WriteSch")
	public String showSchPage() {
		
		return "Community_WriteSch";
	}
	
	
	// 작성페이지 관광지 서치
	@GetMapping("placeInfo")
	@ResponseBody
	public List<Place> placeInfo(@RequestParam("loc") String loc, @RequestParam("name") String name){
		return service.placeInfo(loc,name);
	}
	
	// 스케쥴 인서트 메서드
	// Community_Insert?userid=heoyoun38&loc=%EC%9D%BC%EB%B3%B8&startdate=2023-08-17&enddate=2023-08-18&place_key=pl6&daynum=1
	@GetMapping("Community_Insert")
	@ResponseBody
    public String insertSch(
    		@RequestParam("startdate") @DateTimeFormat(pattern = "yyyy-MM-dd") Date startdate,
    		@RequestParam("enddate") @DateTimeFormat(pattern = "yyyy-MM-dd") Date enddate,
    		Schedule_insert01 ins01, Schedule_insert02 ins02) {
        String msg = "작성 실패";
        SqlSession sqlSession = null; // 선언한 sqlSession

        try {
            sqlSession = sqlSessionFactory.openSession(); // sqlSession 생성
            
            // 스케쥴 정보 삽입
            sqlSession.insert("scheduleIns01", ins01);

            // 첫 번째 INSERT 문에서 생성된 키 값을 받아옴
            String generatedKey = ins01.getSchedule_key(); // 수정된 부분

            // 스케쥴_플레이스 정보 삽입
            ins02.setSchedule_key(generatedKey); // 첫 번째 INSERT 문에서 생성한 키 값을 설정
            sqlSession.insert("scheduleIns02", ins02);

            sqlSession.commit(); // 트랜잭션 커밋

            msg = "작성이 완료되었습니다.";
        } catch (Exception e) {
            if (sqlSession != null) {
                sqlSession.rollback(); // 에러 발생 시 트랜잭션 롤백
            }
            e.printStackTrace();
        } finally {
            if (sqlSession != null) {
                sqlSession.close(); // sqlSession 닫기
            }
        }

        return msg;
    }


}
