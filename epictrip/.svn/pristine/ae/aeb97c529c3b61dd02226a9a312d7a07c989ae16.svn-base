-------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------
-- CREATE 문 ----------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------
CREATE TABLE userinfo (
	userid	VARCHAR(255)	NOT NULL PRIMARY KEY,
	pass	VARCHAR(255)	NULL,
	name	VARCHAR(255)	NULL,
	mobilenumber	VARCHAR(255)	NULL,
	gender	VARCHAR(255)	NULL,
	birth	DATE NULL,
	email	VARCHAR(255)	NULL,
	point	number	NULL,
	image	VARCHAR(255)	NULL,
	auth	VARCHAR(255)	NULL,
	joindate	Date	NULL
);

CREATE TABLE PlaysInfo (
	plays VARCHAR(255),
	lat VARCHAR(255),
	lng VARCHAR(255),
	loc VARCHAR(255),
	playskey VARCHAR2(255)
);
ALTER TABLE playsInfo
ADD playskey VARCHAR2(255);
SELECT * FROM PlaysInfo;
DROP TABLE PlaysInfo;
CREATE SEQUENCE playsInfo_seq
  START WITH 1
  INCREMENT BY 1
  NOCACHE
  NOCYCLE;
SELECT plays, COUNT(*) AS duplicate_count
FROM playsInfo
GROUP BY plays
HAVING COUNT(*) > 1;
INSERT INTO playsInfo (infokey, plays, lat, lng, loc) VALUES ('pl'||playsInfo_seq.nextval,'무로란', 42.3151792, 140.9737666, '일본');
INSERT ALL
INTO playsInfo (plays, lat, lng, loc, ) VALUES ('무로란', 42.3151792, 140.9737666, '일본','pl'||playsInfo_seq)
INTO playsInfo (plays, lat, lng, loc) VALUES ('지큐미사키', 42.3027107, 141.0008274, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('하코다테야마', 41.7445775, 140.7056028, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('고료카쿠', 41.7969245, 140.7567838, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('마츠마에', 41.5041304, 140.1734928, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('에사시', 41.84008, 140.1281, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('오누마', 41.9987492, 140.6903742, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('고마가다케', 42.063333, 140.677222, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('쿠시로(습지)', 42.9849413, 144.381804, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('아캉호수', 43.4572585, 144.1040147, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('미호로', 36.6714657, 127.4224247, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('토와다호수', 40.6186927, 141.146339, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('오이라세계곡', 40.6864706, 139.9701849, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('하치노헤(타네사시해안)', 19.2183307, 72.9780897, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('시모키타 반도', 41.4360723, 141.1024054, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('시모후로온천', 41.4669139, 141.0928587, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('하치만타이', 40.0670801, 140.7827828, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('하나마키온천', 32.2423335, 130.7260843, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('시도타이라온천', 39.4198519, 141.0231145, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('미야기자오', 38.7094478, 141.4925426, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('아사히카와온천', 43.7708833, 142.3650083, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('오니카와온천', 26.1201911, 127.7025012, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('오타루 사와아카기 온천', 43.1902372, 140.994172, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('오미카지리', 36.5128356, 140.6194923, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('오타루 쇼워스', 43.1902372, 140.994172, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('에코밸리 미야쿠', 37.5452683, 126.9224223, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('오타루 아사리', 43.1751528, 141.0703878, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('오기니마치', 33.1215572, 131.0681257, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('도쿄디즈니랜드', 35.6328964, 139.8803943, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('에노시마', 35.2990992, 139.4809269, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('후지산', 35.3606255, 138.7273634, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('아타미 온천', 35.0963896, 139.071784, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('카와구치와 캔포우', 35.8077356, 139.7241874, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('요코하마 차이나타운', 35.4434459, 139.6460909, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('요코하마 모토마치', 35.4398189, 139.6499917, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('나가사키', 33.2488525, 129.6930912, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('호쿠라온천', 34.7355226, 135.2780417, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('나고야', 35.1814506, 136.9065571, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('쿠마모토산', 32.8594427, 130.7969149, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('쿠마모토 온천', 32.8032164, 130.7079369, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('벳부갓아래 온천', 33.2844614, 131.4907093, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('오이소', 35.311435, 139.313291, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('하코네유모토온천', 35.2333827, 139.1039163, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('아시노코호수', 35.2095674, 139.0034626, '일본')
INTO playsInfo (plays, lat, lng, loc) VALUES ('센고쿠하라온천', 35.2607723, 139.0110305, '일본')
SELECT * FROM DUAL;


CREATE TABLE Recommendation (
	reckey	VARCHAR(255)	NOT NULL,
	userid	VARCHAR(255)	NOT NULL,
	recuser	VARCHAR(255)	NULL,
	PRIMARY KEY (reckey, userid),
	FOREIGN KEY (userid) REFERENCES userinfo (userid)
);

CREATE TABLE Wishlist (
	wlkey	VARCHAR(255)	NOT NULL,
	userid	VARCHAR(255)	NOT NULL,
	prodkey	VARCHAR(255)	NOT NULL,
	wldate	date	NULL,
	PRIMARY KEY (wlkey, userid, prodkey),
	FOREIGN KEY (userid) REFERENCES userinfo (userid),
	FOREIGN KEY (prodkey) REFERENCES product (prodkey)
);

CREATE TABLE Schedule (
	skey	VARCHAR(255)	NOT NULL,
	userid	VARCHAR(255)	NOT NULL,
	creatdate	date	NULL,
	PRIMARY KEY (skey, userid),
	FOREIGN KEY (userid) REFERENCES userinfo (userid)
);

CREATE TABLE company (
	cpkey	VARCHAR(255)	NOT NULL,
	userid	VARCHAR(255)	NOT NULL,
	image	VARCHAR(255)	NULL,
	cptitle	VARCHAR(255)	NULL,
	cpcontent	VARCHAR(3000)	NULL,
	cploc	VARCHAR(255)	NULL,
	cpnum	number	NULL, --모집인원
	currentnum NUMBER DEFAULT 0, --현재인원
	hits	number	DEFAULT 0, --조회수
	startdate	date	NULL,
	enddate	date	NULL,
	creatdate	date	NULL,
	PRIMARY KEY (cpkey, userid),
	FOREIGN KEY (userid) REFERENCES userinfo (userid)
);
CREATE TABLE product (
	prodkey	VARCHAR(255)	NOT NULL PRIMARY KEY,
	prodloc	VARCHAR(255)	NULL,
	dcday	double	NULL,
	dcprice	double	NULL,
	price	number	NULL,
	prodtitle	VARCHAR(255)	NULL,
	prodcontent	VARCHAR(3000)	NULL,
	image	VARCHAR(255)	NULL,
	hits	number	NULL,
	startdate	date	NULL,
	enddate	date	NULL,
	creatdate	date	NULL
);

CREATE TABLE Payment (
	paykey	VARCHAR(255)	NOT NULL,
	userid	VARCHAR(255)	NOT NULL,
	prodkey	VARCHAR(255)	NOT NULL,
	savedmoney	number	NULL,
	paydate	date	NULL,
	paystatus	VARCHAR(255)	NULL,
	PRIMARY KEY (paykey, userid, prodkey),
	FOREIGN KEY (userid) REFERENCES userinfo (userid),
	FOREIGN KEY (prodkey) REFERENCES product (prodkey)
);

CREATE TABLE Prodcomment (
	commentkey	VARCHAR(255)	NOT NULL,
	prodkey	VARCHAR(255)	NOT NULL,
	userid	VARCHAR(255)	NOT NULL,
	Uppernumber	VARCHAR(255)	NULL,
	comment	VARCHAR(255)	NULL,
	uploaddate	date	NULL,
	updatedate	date	NULL,
	PRIMARY KEY (commentkey, prodkey, userid),
	FOREIGN KEY (prodkey) REFERENCES product (prodkey),
	FOREIGN KEY (userid) REFERENCES userinfo (userid)
);

CREATE TABLE Detailschedule (
	dskey	VARCHAR(255)	NOT NULL,
	skey2	VARCHAR(255)	NOT NULL,
	userid	VARCHAR(255)	NOT NULL,
	PRIMARY KEY (dskey, skey2, userid),
	FOREIGN KEY (skey2, userid) REFERENCES Schedule (skey, userid)
);

CREATE TABLE Message (
	Messagekey	VARCHAR(255)	NOT NULL,
	cpkey	VARCHAR(255)	NOT NULL,
	userid	VARCHAR(255)	NOT NULL,
	reuserid	VARCHAR(255)	NULL,
	msgcontent	VARCHAR(3000)	NULL,
	sendtime	timestamp	NULL,
	PRIMARY KEY (Messagekey, cpkey, userid),
	FOREIGN KEY (cpkey, userid) REFERENCES company (cpkey, userid)
);

CREATE TABLE mySchedule (
	mskey	VARCHAR(255)	NOT NULL,
	skey2	VARCHAR(255)	NOT NULL,
	userid	VARCHAR(255)	NOT NULL,
	msdate	date	NULL,
	PRIMARY KEY (mskey, skey2, userid),
	FOREIGN KEY (skey2, userid) REFERENCES Schedule (skey, userid)
);
-------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------
-- CREATE 문 ----------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------
DROP TABLE Message;
DROP TABLE mySchedule;
DROP TABLE Detailschedule;
DROP TABLE Prodcomment;
DROP TABLE Payment;
DROP TABLE product;
DROP TABLE company;
DROP TABLE Schedule;
DROP TABLE Wishlist;
DROP TABLE Recommendation;
DROP TABLE userinfo;
-------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------
-- DROP 문 ----------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------



CREATE TABLE UserInfo (
   userid VARCHAR(255) NOT NULL,
   pass VARCHAR(255) NULL,
   name VARCHAR(255) NULL,
   phnumber VARCHAR(255) NULL,
   gender VARCHAR(255) NULL,
   birth Date NULL,
   email VARCHAR(255) NULL,
   point number NULL,
   image VARCHAR(255) NULL,
   auth VARCHAR(255) NULL,
   joindate Date NULL
);
DROP TABLE UserInfo;
ALTER TABLE UserInfo ADD CONSTRAINT PK_UNTITLED PRIMARY KEY (
   userid
);
SELECT * FROM UserInfo;
INSERT INTO userInfo values('asdads', '0000', '윤석민', '123123', '남', '20230112', 'dasd@naver.com', 100, 'img01', 'user', sysdate)

-- 로그인
SELECT COUNT(*) FROM USERINFO WHERE userid = 'heoyoun38' AND pass = '0000';

-- 회원가입
INSERT INTO userInfo values('heoyoun38','0000','윤석민','01033293090','남','19980309','min030900@naver.com',9999,'img01','admin',sysdate);
INSERT INTO userInfo values('gPdnjs123','0000','신혜원','0103333333','여',TO_DATE ('19980309','YYYY-MM-DD'),'gPdnjs123@naver.com',9999,'img01','admin',sysdate);

-- 아이디 확인
SELECT COUNT(*) FROM USERINFO WHERE userid = 'heoyoun38';
/*
회원 DB
- 아이디
- 비밀번호
- 이름
- 전화번호
- 성별
- 생년 월일
- 이메일
- 휴대폰 번호
- 포인트
-  이미지
- 권한
- 생성 날짜

*/
DROP TABLE IF EXISTS userinfo;

CREATE TABLE userinfo (
	userid	VARCHAR(255)	NOT NULL,
	pass	VARCHAR(255)	NULL,
	name	VARCHAR(255)	NULL,
	mobilenumber	VARCHAR(255)	NULL,
	gender	VARCHAR(255)	NULL,
	birth	DATE NULL,
	email	VARCHAR(255)	NULL,
	point	number	NULL,
	image	VARCHAR(255)	NULL,
	auth	VARCHAR(255)	NULL,
	joindate	Date	NULL
);

DROP TABLE IF EXISTS Recommendation;

CREATE TABLE Recommendation (
	reckey	VARCHAR(255)	NOT NULL,
	userid	VARCHAR(255)	NOT NULL,
	recuser	VARCHAR(255)	NULL
);

DROP TABLE IF EXISTS Wishlist;

CREATE TABLE Wishlist (
	wlkey	VARCHAR(255)	NOT NULL,
	userid	VARCHAR(255)	NOT NULL,
	prodkey	VARCHAR(255)	NOT NULL,
	wldate	date	NULL
);

DROP TABLE IF EXISTS Schedule;

CREATE TABLE Schedule (
	skey	VARCHAR(255)	NOT NULL,
	userid	VARCHAR(255)	NOT NULL,
	creatdate	date	NULL
);

DROP TABLE IF EXISTS company;

SELECT * FROM COMPANY c 
WHERE CPTITLE LIKE '%'||'괌'||'%'
ORDER BY CREATDATE DESC
;
SELECT * FROM COMPANY c 
WHERE ENDDATE-SYSDATE>0 
ORDER BY HITS DESC
;
DELETE FROM COMPANY
WHERE CPKEY = 3;
INSERT INTO COMPANY c values(company_sq.nextval,'dudwo123','image1','괌 같이 가실분 괌~','괌으로 떠납니다!!','괌',4,0,0,'2023-08-15','2023-08-19',sysdate);

CREATE SEQUENCE company_sq
  START WITH 1
  INCREMENT BY 1
  NOMAXVALUE;

CREATE TABLE company (
	cpkey	VARCHAR(255)	NOT NULL,
	userid	VARCHAR(255)	NOT NULL,
	image	VARCHAR(255)	NULL,
	cptitle	VARCHAR(255)	NULL,
	cpcontent	VARCHAR(3000)	NULL,
	cploc	VARCHAR(255)	NULL,
	cpnum	number	NULL, --모집인원
	currentnum NUMBER DEFAULT 0, --현재인원
	hits	number	DEFAULT 0, --조회수
	startdate	date	NULL,
	enddate	date	NULL,
	creatdate	date	NULL
);


DROP TABLE IF EXISTS product;

CREATE TABLE product (
	prodkey	VARCHAR(255)	NOT NULL,
	prodloc	VARCHAR(255)	NULL,
	dcday	double	NULL,
	dcprice	double	NULL,
	price	number	NULL,
	prodtitle	VARCHAR(255)	NULL,
	prodcontent	VARCHAR(3000)	NULL,
	image	VARCHAR(255)	NULL,
	hits	number	NULL,
	startdate	date	NULL,
	enddate	date	NULL,
	creatdate	date	NULL
);

DROP TABLE IF EXISTS Payment;

CREATE TABLE Payment (
	paykey	VARCHAR(255)	NOT NULL,
	userid	VARCHAR(255)	NOT NULL,
	prodkey	VARCHAR(255)	NOT NULL,
	savedmoney	number	NULL,
	paydate	date	NULL,
	paystatus	VARCHAR(255)	NULL
);

DROP TABLE IF EXISTS Prodcomment;

CREATE TABLE Prodcomment (
	commentkey	VARCHAR(255)	NOT NULL,
	prodkey	VARCHAR(255)	NOT NULL,
	userid	VARCHAR(255)	NOT NULL,
	Uppernumber	VARCHAR(255)	NULL,
	comment	VARCHAR(255)	NULL,
	uploaddate	date	NULL,
	updatedate	date	NULL
);

DROP TABLE IF EXISTS Detailschedule;

CREATE TABLE Detailschedule (
	dskey	VARCHAR(255)	NOT NULL,
	skey2	VARCHAR(255)	NOT NULL,
	userid	VARCHAR(255)	NOT NULL
);

DROP TABLE IF EXISTS Message;

CREATE TABLE Message (
	Messagekey	VARCHAR(255)	NOT NULL,
	cpkey	VARCHAR(255)	NOT NULL,
	userid	VARCHAR(255)	NOT NULL,
	reuserid	VARCHAR(255)	NULL,
	msgcontent	VARCHAR(3000)	NULL,
	sendtime	timestamp	NULL
);

DROP TABLE IF EXISTS mySchedule;

CREATE TABLE mySchedule (
	mskey	VARCHAR(255)	NOT NULL,
	skey2	VARCHAR(255)	NOT NULL,
	userid	VARCHAR(255)	NOT NULL,
	msdate	date	NULL
);

ALTER TABLE userinfo ADD CONSTRAINT PK_USERINFO PRIMARY KEY (
	userid
);

ALTER TABLE Recommendation ADD CONSTRAINT PK_RECOMMENDATION PRIMARY KEY (
	reckey,
	userid
);

ALTER TABLE Wishlist ADD CONSTRAINT PK_WISHLIST PRIMARY KEY (
	wlkey,
	userid,
	prodkey
);

ALTER TABLE Schedule ADD CONSTRAINT PK_SCHEDULE PRIMARY KEY (
	skey,
	userid
);

ALTER TABLE company ADD CONSTRAINT PK_COMPANY PRIMARY KEY (
	cpkey,
	userid
);

ALTER TABLE product ADD CONSTRAINT PK_PRODUCT PRIMARY KEY (
	prodkey
);

ALTER TABLE Payment ADD CONSTRAINT PK_PAYMENT PRIMARY KEY (
	paykey,
	userid,
	prodkey
);

ALTER TABLE Prodcomment ADD CONSTRAINT PK_PRODCOMMENT PRIMARY KEY (
	commentkey,
	prodkey,
	userid
);

ALTER TABLE Detailschedule ADD CONSTRAINT PK_DETAILSCHEDULE PRIMARY KEY (
	dskey,
	skey2,
	userid
);

ALTER TABLE Message ADD CONSTRAINT PK_MESSAGE PRIMARY KEY (
	Messagekey,
	cpkey,
	userid
);

ALTER TABLE mySchedule ADD CONSTRAINT PK_MYSCHEDULE PRIMARY KEY (
	mskey,
	skey2,
	userid
);

ALTER TABLE Recommendation ADD CONSTRAINT FK_userinfo_TO_Recommendation_1 FOREIGN KEY (
	userid
)
REFERENCES userinfo (
	userid
);

ALTER TABLE Wishlist ADD CONSTRAINT FK_userinfo_TO_Wishlist_1 FOREIGN KEY (
	userid
)
REFERENCES userinfo (
	userid
);

ALTER TABLE Wishlist ADD CONSTRAINT FK_product_TO_Wishlist_1 FOREIGN KEY (
	prodkey
)
REFERENCES product (
	prodkey
);

ALTER TABLE Schedule ADD CONSTRAINT FK_userinfo_TO_Schedule_1 FOREIGN KEY (
	userid
)
REFERENCES userinfo (
	userid
);

ALTER TABLE company ADD CONSTRAINT FK_userinfo_TO_company_1 FOREIGN KEY (
	userid
)
REFERENCES userinfo (
	userid
);

ALTER TABLE Payment ADD CONSTRAINT FK_userinfo_TO_Payment_1 FOREIGN KEY (
	userid
)
REFERENCES userinfo (
	userid
);

ALTER TABLE Payment ADD CONSTRAINT FK_product_TO_Payment_1 FOREIGN KEY (
	prodkey
)
REFERENCES product (
	prodkey
);

ALTER TABLE Prodcomment ADD CONSTRAINT FK_product_TO_Prodcomment_1 FOREIGN KEY (
	prodkey
)
REFERENCES product (
	prodkey
);

ALTER TABLE Prodcomment ADD CONSTRAINT FK_userinfo_TO_Prodcomment_1 FOREIGN KEY (
	userid
)
REFERENCES userinfo (
	userid
);

ALTER TABLE Detailschedule ADD CONSTRAINT FK_Schedule_TO_Detailschedule_1 FOREIGN KEY (
	skey2
)
REFERENCES Schedule (
	skey
);

ALTER TABLE Detailschedule ADD CONSTRAINT FK_Schedule_TO_Detailschedule_2 FOREIGN KEY (
	userid
)
REFERENCES Schedule (
	userid
);

ALTER TABLE Message ADD CONSTRAINT FK_company_TO_Message_1 FOREIGN KEY (
	cpkey
)
REFERENCES company (
	cpkey
);

ALTER TABLE Message ADD CONSTRAINT FK_company_TO_Message_2 FOREIGN KEY (
	userid
)
REFERENCES company (
	userid
);

ALTER TABLE mySchedule ADD CONSTRAINT FK_Schedule_TO_mySchedule_1 FOREIGN KEY (
	skey2
)
REFERENCES Schedule (
	skey
);

ALTER TABLE mySchedule ADD CONSTRAINT FK_Schedule_TO_mySchedule_2 FOREIGN KEY (
	userid
)
REFERENCES Schedule (
	userid
);



